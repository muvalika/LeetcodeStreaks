class Solution {
    public int waysToSplitArray(int[] nums) {
        int n = nums.length;

        // Calculate the total sum of the array
        long totalSum = 0;
        for (int num : nums) {
            totalSum += num;
        }

        // Initialize variables for prefix sum and valid splits count
        long prefixSum = 0;
        int validSplits = 0;

        // Iterate through the array to calculate the prefix sum and check conditions
        for (int i = 0; i < n - 1; i++) {
            prefixSum += nums[i]; // Add the current element to prefix sum

            // Calculate the sum of the remaining part
            long suffixSum = totalSum - prefixSum;

            // Check if the prefix sum is greater than or equal to the suffix sum
            if (prefixSum >= suffixSum) {
                validSplits++;
            }
        }

        return validSplits;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();

        int[] nums = {10, 4, -8, 7}; // Example input
        System.out.println("Number of valid splits: " + solution.waysToSplitArray(nums)); // Output: 2
    }
}