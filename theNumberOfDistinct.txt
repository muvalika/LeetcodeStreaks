import java.util.*;

class Solution {
    public int[] queryResults(int limit, int[][] queries) {
        Map<Integer, Integer> ballColorMap = new HashMap<>();
        Map<Integer, Integer> colorFrequency = new HashMap<>();
        int[] result = new int[queries.length];
        int distinctCount = 0;

        for (int i = 0; i < queries.length; i++) {
            int ball = queries[i][0];
            int color = queries[i][1];

            // If the ball already has a color, update frequency map
            if (ballColorMap.containsKey(ball)) {
                int prevColor = ballColorMap.get(ball);
                colorFrequency.put(prevColor, colorFrequency.get(prevColor) - 1);
                if (colorFrequency.get(prevColor) == 0) {
                    colorFrequency.remove(prevColor);
                    distinctCount--;  // Remove color if no balls have it
                }
            }

            // Assign new color to ball
            ballColorMap.put(ball, color);
            colorFrequency.put(color, colorFrequency.getOrDefault(color, 0) + 1);
            
            // If it's a new color, increase distinct count
            if (colorFrequency.get(color) == 1) {
                distinctCount++;
            }

            // Store result
            result[i] = distinctCount;
        }

        return result;
    }
}